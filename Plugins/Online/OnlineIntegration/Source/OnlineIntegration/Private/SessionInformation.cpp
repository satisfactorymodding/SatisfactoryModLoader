// This file has been automatically generated by the Unreal Header Implementation tool

#include "SessionInformation.h"

UOnlineSessionBackendLink* USessionInformation::GetSessionBackendLink(UOnlineIntegrationBackend* OnlineBackend) const{ return nullptr; }
FCommonSession USessionInformation::GetSessionHandle() const{ return FCommonSession(); }
void USessionInformation::UpdateCustomSettings(APlayerController *Player, const TArray<FCustomOnlineSessionSetting>& UpdatedCustomSettings){ }
USessionMemberInformation* USessionInformation::AddSessionMember(APlayerState* PlayerState){ return nullptr; }
void USessionInformation::RemoveSessionMember(APlayerState* PlayerState){ }
bool USessionInformation::GetCustomSetting(FName SettingName, FCustomOnlineSessionSetting& OutSetting){ return bool(); }
void USessionInformation::RefreshCachedData(FDateTime UpdateTimestampUtc){ }
FName USessionInformation::GetCurrentProfile() const{ return FName(); }
int32 USessionInformation::GetNumMaxConnections() const{ return int32(); }
FDateTime USessionInformation::GetLastUpdateTimestampUtc() const{ return FDateTime(); }
ECommonSessionJoinPolicy USessionInformation::GetJoinPolicy() const{ return ECommonSessionJoinPolicy(); }
FDelegateHandle USessionInformation::AddOnSessionAttributesAddedDelegate(FOnOnlineSessionAttributesAdded::FDelegate Delegate){ return FDelegateHandle(); }
FDelegateHandle USessionInformation::AddOnSessionAttributesRemovedDelegate(FOnOnlineSessionAttributesRemoved::FDelegate Delegate){ return FDelegateHandle(); }
FDelegateHandle USessionInformation::AddOnSessionAttributesUpdatedDelegate(FOnOnlineSessionAttributesUpdated::FDelegate Delegate){ return FDelegateHandle(); }
void USessionInformation::RemoveOnSessionAttributesAddedDelegate(FDelegateHandle DelegateHandle){ }
void USessionInformation::RemoveOnSessionAttributesRemovedDelegate(FDelegateHandle DelegateHandle){ }
void USessionInformation::RemoveOnSessionAttributesUpdatedDelegate(FDelegateHandle DelegateHandle){ }
void USessionInformation::ApplyProfile(FName ProfileName){ }
void USessionInformation::ApplyAllowNewMembers(bool AllowNewMembers){ }
bool USessionInformation::IsOnlineSession() const{ return false; }
void USessionInformation::UpdateRecentlyPlayedWith(class ULocalUserInfo* LocalUser){ }
void USessionInformation::UpdatePresenceForSessionMembers() const{ }
USessionMemberInformation* USessionInformation::FindMember(UE::Online::FAccountId AccountId){ return nullptr; }
int32 USessionInformation::FindMemberIndex(UE::Online::FAccountId AccountId){ return int32(); }
void USessionInformation::TryUpdateRecentPlayers(){ }
