// This file has been automatically generated by the Unreal Header Implementation tool

#include "Sequences/SessionCreationSequence.h"

void USessionCreationSequence::Initialize(const FCommonSessionCreationSettings& SessionSettings){ }
bool USessionCreationSequence::Start(){ return bool(); }
bool USessionCreationSequence::IsHostingSession() const{ return bool(); }
void USessionCreationSequence::OnTravelFinished(UWorld* World){ }
bool USessionCreationSequence::CheckConnection(){ return false; }
EConditionalLoopResult USessionCreationSequence::SessionCleanupLoop(TSharedRef<FConditionalLoop> LoopNodeRef){ return EConditionalLoopResult(); }
void USessionCreationSequence::CreateMainSession(TSharedRef<FControlFlowNode>){ }
EConditionalLoopResult USessionCreationSequence::MirrorSessionCreationLoop(TSharedRef<FConditionalLoop> LoopNodeRef){ return EConditionalLoopResult(); }
EConditionalLoopResult USessionCreationSequence::SessionMetadataUpdateLoop(TSharedRef<FConditionalLoop> LoopNodeRef){ return EConditionalLoopResult(); }
void USessionCreationSequence::IncrementSessionCleanupLoopIndex(){ }
void USessionCreationSequence::IncrementMirrorSessionCreationLoopIndex(){ }
void USessionCreationSequence::IncrementSessionMetadataUpdateLoopIndex(){ }
void USessionCreationSequence::CreateSession(TSharedRef<FControlFlowNode>, UOnlineIntegrationBackend* Backend){ }
void USessionCreationSequence::StoreSessionMetadata(TSharedRef<FControlFlowNode>, UOnlineIntegrationBackend* Backend){ }
void USessionCreationSequence::Travel(){ }
void USessionCreationSequence::NotifySetupComplete(){ }
void USessionCreationSequence::OnTimeout() { }
