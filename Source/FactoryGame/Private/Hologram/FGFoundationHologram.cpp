// This file has been automatically generated by the Unreal Header Implementation tool

#include "Hologram/FGFoundationHologram.h"

AFGFoundationHologram::AFGFoundationHologram() : Super() {
	this->mFineTuneRotationStep = 5;
	this->mSnapVerticalHitZoneRatio = 0.25;
	this->mSideSnapDistanceFromEdgeThreshold = 200.0;
	this->mOnlyAllowLineZoop = false;
	this->mAllowCornerRotationMode = false;
	this->mBuildModeVerticalZoop = nullptr;
	this->mMaxPlacementFloorAngle = 85.0;
}
void AFGFoundationHologram::BeginPlay(){ }
void AFGFoundationHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
bool AFGFoundationHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
void AFGFoundationHologram::GetSupportedBuildModes_Implementation(TArray<TSubclassOf<UFGHologramBuildModeDescriptor>>& out_buildmodes) const{ }
int32 AFGFoundationHologram::GetRotationStep() const{ return int32(); }
bool AFGFoundationHologram::CanSnapVertically( AFGBuildableFoundation* toFoundation, float dirZ) const{ return bool(); }
void AFGFoundationHologram::UpdateZoop(){ }
void AFGFoundationHologram::ConstructZoop(TArray<AActor*>& out_children){ }
FVector AFGFoundationHologram::ConvertZoopToWorldLocation(const FIntVector& zoop) const{ return FVector(); }
void AFGFoundationHologram::CheckValidPlacement(){ }
bool AFGFoundationHologram::IsHologramIdenticalToBuildable( AFGBuildable* buildable, const FVector& hologramLocationOffset) const{ return bool(); }
void AFGFoundationHologram::SetZoopFromHitresult(const FHitResult& hitResult){ }
void AFGFoundationHologram::CreateDefaultFoundationZoop(const FHitResult& hitResult){ }
void AFGFoundationHologram::CreateVerticalFoundationZoop(const FHitResult& hitResult){ }
