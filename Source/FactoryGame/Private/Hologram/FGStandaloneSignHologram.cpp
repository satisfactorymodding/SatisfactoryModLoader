// This file has been automatically generated by the Unreal Header Implementation tool

#include "Hologram/FGStandaloneSignHologram.h"
#include "Net/UnrealNetwork.h"

AFGStandaloneSignHologram::AFGStandaloneSignHologram() : Super() {
	this->mDefaultSignSupportRecipe = nullptr;
	this->mChildSignPoleHologram = nullptr;
	this->mBeamSnappingMode = EBeamSnappingMode::BSM_AllSides;
	this->mPillarSnappingMode = EPillarSnappingMode::PSM_AllSides;
	this->mWallSnapOffset = FVector((50, 0, 0));
	this->mUseGradualFoundationRotations = true;
	this->mAttachmentPointSnapDistanceThreshold = 10000.0;
}
void AFGStandaloneSignHologram::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGStandaloneSignHologram, mChildSignPoleHologram);
}
void AFGStandaloneSignHologram::BeginPlay(){ Super::BeginPlay(); }
bool AFGStandaloneSignHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
bool AFGStandaloneSignHologram::DoMultiStepPlacement(bool isInputFromARelease){ return bool(); }
void AFGStandaloneSignHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
AActor* AFGStandaloneSignHologram::Construct(TArray< AActor* >& out_children, FNetConstructionID netConstructionID){ return nullptr; }
void AFGStandaloneSignHologram::PreHologramPlacement(const FHitResult& hitResult){ }
bool AFGStandaloneSignHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
void AFGStandaloneSignHologram::SpawnChildren(AActor* hologramOwner, FVector spawnLocation, APawn* hologramInstigator){ }
void AFGStandaloneSignHologram::Scroll(int32 delta){ }
void AFGStandaloneSignHologram::OnInvalidHitResult(){ }
AFGHologram* AFGStandaloneSignHologram::GetNudgeHologramTarget(){ return nullptr; }
void AFGStandaloneSignHologram::PostHologramPlacement(const FHitResult& hitResult){ }
int32 AFGStandaloneSignHologram::GetRotationStep() const{ return int32(); }
void AFGStandaloneSignHologram::CheckValidFloor(){ }
