// This file has been automatically generated by the Unreal Header Implementation tool

#include "Hologram/FGPoleHologram.h"
#include "Components/InstancedStaticMeshComponent.h"
#include "Components/SceneComponent.h"
#include "Components/StaticMeshComponent.h"
#include "Net/UnrealNetwork.h"

AFGPoleHologram::AFGPoleHologram() : Super() {
	this->mPoleMeshComponent = CreateDefaultSubobject<UStaticMeshComponent>(TEXT("PoleMesh"));
	this->mPoleMeshComponent->SetMobility(EComponentMobility::Movable);
	this->mPoleVariationIndex = -1;
	this->mUseGradualFoundationRotations = true;
	this->mCreateClearanceSnapMeshVisualization = false;
	this->mAllowEdgePlacementInDesignerEvenOnIntersect = true;
	this->mPoleMeshComponent->SetupAttachment(RootComponent);
}
void AFGPoleHologram::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGPoleHologram, mPoleVariationIndex);
}
void AFGPoleHologram::BeginPlay(){ Super::BeginPlay(); }
bool AFGPoleHologram::DoMultiStepPlacement(bool isInputFromARelease){ return bool(); }
bool AFGPoleHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
void AFGPoleHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
void AFGPoleHologram::ReplaceHologram(AFGHologram* hologram, bool snapTransform){ }
void AFGPoleHologram::GetClearanceData(TArray< const FFGClearanceData* >& out_ClearanceData) const{ }
bool AFGPoleHologram::ShouldAutomaticallySpawnLightWeightInstances() const{ return Super::ShouldAutomaticallySpawnLightWeightInstances(); }
void AFGPoleHologram::ResetBuildSteps(){ }
void AFGPoleHologram::SetPoleHeight(float height){ }
void AFGPoleHologram::UpdatePoleMesh(){ }
void AFGPoleHologram::OnRep_PoleVariationIndex(){ }
void AFGPoleHologram::ConfigureActor( AFGBuildable* inBuildable) const{ }
