// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGRailroadVehicle.h"
#include "Hologram/FGRailroadVehicleHologram.h"
#include "Net/UnrealNetwork.h"

AFGRailroadVehicle::AFGRailroadVehicle() : Super() {
	this->mTrain = nullptr;
	this->mLength = 500.0;
	this->mCoupledVehicleFront = nullptr;
	this->mCoupledVehicleBack = nullptr;
	this->mIsOrientationReversed = false;
	this->mTrackPosition.Track = nullptr;
	this->mTrackPosition.Offset = 0.0;
	this->mTrackPosition.Forward = 0.0;
	this->mIsDerailed = false;
	this->mIsMaxDerailDistanceReached = false;
	this->mHologramClass = AFGRailroadVehicleHologram::StaticClass();
	this->SetReplicatingMovement(false);
}
void AFGRailroadVehicle::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGRailroadVehicle, mTrain);
	DOREPLIFETIME(AFGRailroadVehicle, mCoupledVehicleFront);
	DOREPLIFETIME(AFGRailroadVehicle, mCoupledVehicleBack);
	DOREPLIFETIME(AFGRailroadVehicle, mIsOrientationReversed);
	DOREPLIFETIME(AFGRailroadVehicle, mTrackPosition);
	DOREPLIFETIME(AFGRailroadVehicle, mIsDerailed);
}
void AFGRailroadVehicle::BeginPlay(){ Super::BeginPlay(); }
void AFGRailroadVehicle::Destroyed(){ Super::Destroyed(); }
void AFGRailroadVehicle::Serialize(FArchive& ar){ Super::Serialize(ar); }
void AFGRailroadVehicle::Tick(float dt){ Super::Tick(dt); }
bool AFGRailroadVehicle::CanDismantle_Implementation() const{ return bool(); }
void AFGRailroadVehicle::GetDismantleDisqualifiers_Implementation(TArray<TSubclassOf<UFGConstructDisqualifier>>& out_dismantleDisqualifiers, const TArray<AActor*>& allSelectedActors) const{ }
void AFGRailroadVehicle::GainedSignificance_Implementation(){ }
void AFGRailroadVehicle::LostSignificance_Implementation(){ }
void AFGRailroadVehicle::UpdateUseState_Implementation( AFGCharacterPlayer* byCharacter, const FVector& atLocation,  UPrimitiveComponent* componentHit, FUseState& out_useState){ }
void AFGRailroadVehicle::OnUse_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGRailroadVehicle::OnUseStop_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
bool AFGRailroadVehicle::IsUseable_Implementation() const{ return bool(); }
void AFGRailroadVehicle::StartIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGRailroadVehicle::StopIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
FText AFGRailroadVehicle::GetLookAtDecription_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state) const{ return FText(); }
void AFGRailroadVehicle::RegisterInteractingPlayer_Implementation( AFGCharacterPlayer* player){ }
void AFGRailroadVehicle::UnregisterInteractingPlayer_Implementation( AFGCharacterPlayer* player){ }
void AFGRailroadVehicle::UpdatePower(){ }
UFGRailroadVehicleMovementComponent* AFGRailroadVehicle::GetRailroadVehicleMovementComponent() const{ return nullptr; }
bool AFGRailroadVehicle::IsDocked() const{ return bool(); }
void AFGRailroadVehicle::SetTrackPosition(const FRailroadTrackPosition& position){ }
void AFGRailroadVehicle::OnDerail(const FVector& velocity){ }
void AFGRailroadVehicle::OnRerail(){ }
void AFGRailroadVehicle::ShowDerailHologram(){ }
void AFGRailroadVehicle::HideDerailHologram(){ }
void AFGRailroadVehicle::DisplayDebug( UCanvas* canvas, const  FDebugDisplayInfo& debugDisplay, float& YL, float& YPos){ }
void AFGRailroadVehicle::OnCollided_Implementation(AFGRailroadVehicle* withVehicle, float impactVelocity, bool isPrimaryEvent, bool isDerailed){ }
void AFGRailroadVehicle::EnableDerailPhysics(const FVector& velocity){ }
void AFGRailroadVehicle::FreezeDerailPhysics(){ }
void AFGRailroadVehicle::DisableDerailPhysics(){ }
void AFGRailroadVehicle::OnIsSimulatedChanged(){ }
void AFGRailroadVehicle::CoupleVehicleAt(AFGRailroadVehicle* vehicle, ERailroadVehicleCoupler coupler){ }
void AFGRailroadVehicle::DecoupleVehicleAt(ERailroadVehicleCoupler coupler){ }
void AFGRailroadVehicle::OnRep_IsOrientationReversed(){ }
void AFGRailroadVehicle::OnRep_IsDerailed(){ }
