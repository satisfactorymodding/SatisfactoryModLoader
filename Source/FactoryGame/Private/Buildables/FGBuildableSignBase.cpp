// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableSignBase.h"
#include "Components/SceneComponent.h"
#include "FGColoredInstanceMeshProxy.h"

bool UFGSignAttachmentPoint::CanAttach_Implementation(const  FFGAttachmentPoint& point, const  FFGAttachmentPoint& targetPoint) const{ return bool(); }
AFGBuildableSignBase::AFGBuildableSignBase() : Super() {
	this->mMeshComponentProxy = CreateDefaultSubobject<UFGColoredInstanceMeshProxy>(TEXT("SignMeshProxy"));
	this->mWorldDimensions = FVector2D::ZeroVector;
	this->mPoleOffset = FVector::ZeroVector;
	this->mPoleScale = FVector2D::UnitVector;
	this->mSignToSignOffset = 0.0;
	this->mFactoryTickFunction.TickGroup = ETickingGroup::TG_PrePhysics;
	this->mFactoryTickFunction.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->mFactoryTickFunction.bTickEvenWhenPaused = false;
	this->mFactoryTickFunction.bCanEverTick = false;
	this->mFactoryTickFunction.bStartWithTickEnabled = false;
	this->mFactoryTickFunction.bAllowTickOnDedicatedServer = true;
	this->mFactoryTickFunction.TickInterval = 0.0;
	this->mMeshComponentProxy->SetupAttachment(RootComponent);
}
void AFGBuildableSignBase::BeginPlay(){ Super::BeginPlay(); }
AFGBuildable* AFGBuildableSignBase::GetBuildable_Implementation(){ return nullptr; }
TSubclassOf< UFGSignTypeDescriptor > AFGBuildableSignBase::GetSignTypeDescriptor_Implementation(){ return TSubclassOf<UFGSignTypeDescriptor>(); }
FVector2D AFGBuildableSignBase::GetSignDimensions_Implementation(){ return FVector2D(); }
FVector2D AFGBuildableSignBase::GetWorldDimensions_Implementation(){ return FVector2D(); }
FVector2D AFGBuildableSignBase::GetGridSquareDimensions_Implementation(){ return FVector2D(); }
void AFGBuildableSignBase::GetChildDismantleActors_Implementation(TArray<AActor*>& out_ChildDismantleActors) const{ }
