// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableFactoryBuilding.h"
#include "Components/SceneComponent.h"
#include "FGColoredInstanceMeshProxy.h"

FFoundationSideSelectionFlags::FFoundationSideSelectionFlags(){ }
FFoundationSideSelectionFlags::FFoundationSideSelectionFlags(bool defaults){ }
bool FFoundationSideSelectionFlags::GetValueForSide(EFoundationSide Side){ return bool(); }
FFoundationSideSelectionFlags FFoundationSideSelectionFlags::RotateEdges(int32 steps) const{ return FFoundationSideSelectionFlags(); }
const FFoundationSideSelectionFlags FFoundationSideSelectionFlags::NoEdges = FFoundationSideSelectionFlags();
const FFoundationSideSelectionFlags FFoundationSideSelectionFlags::AllEdges = FFoundationSideSelectionFlags();
FVector FFoundationHelpers::GetLocalSpaceNormalFromFoundationSide(EFoundationSide side){ return FVector(); }
FFoundationSideNormal FFoundationHelpers::FindBestMatchingFoundationSideFromLocalNormal(const FVector& normal, FFoundationSideSelectionFlags exludeEdges){ return FFoundationSideNormal(); }
AFGBuildableFactoryBuilding::AFGBuildableFactoryBuilding(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) {
	this->mMeshComponentProxy = CreateDefaultSubobject<UFGColoredInstanceMeshProxy>(TEXT("BuildingMeshProxy"));
	this->mMeshComponentProxy->SetMobility(EComponentMobility::Static);
	this->mCustomRainBoundsMesh = nullptr;
	this->mMeshComponentProxy->SetupAttachment(RootComponent);
}
FName AFGBuildableFactoryBuilding::MeshComponentFName = FName();
AFGBuildableFactoryBuildingLightweight::AFGBuildableFactoryBuildingLightweight(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) {
	this->mMeshComponentProxy = nullptr;
	this->mManagedByLightweightBuildableSubsystem = true;
}
