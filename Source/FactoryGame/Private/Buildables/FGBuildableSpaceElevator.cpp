// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableSpaceElevator.h"

AFGBuildableSpaceElevator::AFGBuildableSpaceElevator() : Super() {
	this->mInputInventory = nullptr;
	this->mGamePhaseManager = nullptr;
	this->mActorRepresentationTexture = nullptr;
}
void AFGBuildableSpaceElevator::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const{ }
bool AFGBuildableSpaceElevator::AddAsRepresentation(){ return bool(); }
bool AFGBuildableSpaceElevator::UpdateRepresentation(){ return bool(); }
bool AFGBuildableSpaceElevator::RemoveAsRepresentation(){ return bool(); }
bool AFGBuildableSpaceElevator::IsActorStatic(){ return bool(); }
FVector AFGBuildableSpaceElevator::GetRealActorLocation(){ return FVector(); }
FRotator AFGBuildableSpaceElevator::GetRealActorRotation(){ return FRotator(); }
UTexture2D* AFGBuildableSpaceElevator::GetActorRepresentationTexture(){ return nullptr; }
FText AFGBuildableSpaceElevator::GetActorRepresentationText(){ return FText(); }
void AFGBuildableSpaceElevator::SetActorRepresentationText(const FText& newText){ }
FLinearColor AFGBuildableSpaceElevator::GetActorRepresentationColor(){ return FLinearColor(); }
void AFGBuildableSpaceElevator::SetActorRepresentationColor(FLinearColor newColor){ }
ERepresentationType AFGBuildableSpaceElevator::GetActorRepresentationType(){ return ERepresentationType(); }
bool AFGBuildableSpaceElevator::GetActorShouldShowInCompass(){ return bool(); }
bool AFGBuildableSpaceElevator::GetActorShouldShowOnMap(){ return bool(); }
EFogOfWarRevealType AFGBuildableSpaceElevator::GetActorFogOfWarRevealType(){ return EFogOfWarRevealType(); }
float AFGBuildableSpaceElevator::GetActorFogOfWarRevealRadius(){ return float(); }
ECompassViewDistance AFGBuildableSpaceElevator::GetActorCompassViewDistance(){ return ECompassViewDistance(); }
void AFGBuildableSpaceElevator::SetActorCompassViewDistance(ECompassViewDistance compassViewDistance){ }
void AFGBuildableSpaceElevator::BeginPlay(){ }
void AFGBuildableSpaceElevator::Dismantle_Implementation(){ }
void AFGBuildableSpaceElevator::Factory_CollectInput_Implementation(){ }
void AFGBuildableSpaceElevator::Factory_Tick(float dt){ }
bool AFGBuildableSpaceElevator::IsFullyUpgraded(){ return bool(); }
void AFGBuildableSpaceElevator::GetNextPhaseCost(TArray< FItemAmount >& out_cost){ }
void AFGBuildableSpaceElevator::PayOffFromInventory(UFGInventoryComponent* inventory, int32 inventorySlotIndex){ }
bool AFGBuildableSpaceElevator::IsReadyToUpgrade(){ return bool(); }
void AFGBuildableSpaceElevator::UpgradeTowTruck_Implementation(){ }
void AFGBuildableSpaceElevator::LaunchTowTruck_Implementation(){ }
AFGGamePhaseManager* AFGBuildableSpaceElevator::GetGamePhaseManager(){ return nullptr; }
void AFGBuildableSpaceElevator::ConsumeInputIngredientsIfNecessary(){ }
