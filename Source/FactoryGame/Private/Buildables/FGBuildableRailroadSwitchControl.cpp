// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableRailroadSwitchControl.h"
#include "Components/SceneComponent.h"
#include "FGColoredInstanceMeshProxy.h"
#include "Net/UnrealNetwork.h"

AFGBuildableRailroadSwitchControl::AFGBuildableRailroadSwitchControl() : Super() {
	this->mSwitchComponent = CreateDefaultSubobject<UFGColoredInstanceMeshProxy>(TEXT("Switch Component"));
	this->mSwitchComponent->SetMobility(EComponentMobility::Static);
	this->mSignificanceRange = 75000.0;
	this->NetDormancy = ENetDormancy::DORM_Awake;
	this->mSwitchComponent->SetupAttachment(RootComponent);
}
void AFGBuildableRailroadSwitchControl::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildableRailroadSwitchControl, mControlledConnections);
	DOREPLIFETIME(AFGBuildableRailroadSwitchControl, mSwitchData);
	DOREPLIFETIME(AFGBuildableRailroadSwitchControl, mVisualState);
}
void AFGBuildableRailroadSwitchControl::BeginPlay(){ Super::BeginPlay(); }
void AFGBuildableRailroadSwitchControl::EndPlay(const EEndPlayReason::Type endPlayReason){ Super::EndPlay(endPlayReason); }
void AFGBuildableRailroadSwitchControl::OnBuildEffectFinished(){ }
void AFGBuildableRailroadSwitchControl::OnBuildEffectActorFinished(){ }
void AFGBuildableRailroadSwitchControl::GainedSignificance_Implementation(){ }
void AFGBuildableRailroadSwitchControl::LostSignificance_Implementation(){ }
void AFGBuildableRailroadSwitchControl::SetupForSignificance(){ }
void AFGBuildableRailroadSwitchControl::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ Super::PostLoadGame_Implementation(saveVersion, gameVersion); }
bool AFGBuildableRailroadSwitchControl::ShouldBlockDismantleSample_Implementation() const{ return bool(); }
bool AFGBuildableRailroadSwitchControl::CanDismantle_Implementation() const{ return bool(); }
void AFGBuildableRailroadSwitchControl::Dismantle_Implementation(){ }
void AFGBuildableRailroadSwitchControl::UpdateUseState_Implementation( AFGCharacterPlayer* byCharacter, const FVector& atLocation,  UPrimitiveComponent* componentHit, FUseState& out_useState){ }
void AFGBuildableRailroadSwitchControl::OnUse_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGBuildableRailroadSwitchControl::OnUseStop_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
bool AFGBuildableRailroadSwitchControl::IsUseable_Implementation() const{ return bool(); }
void AFGBuildableRailroadSwitchControl::StartIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
FText AFGBuildableRailroadSwitchControl::GetLookAtDecription_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state) const{ return FText(); }
void AFGBuildableRailroadSwitchControl::StopIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGBuildableRailroadSwitchControl::ToggleSwitchPosition(){ }
void AFGBuildableRailroadSwitchControl::SetSwitchPosition(int32 newPosition){ }
void AFGBuildableRailroadSwitchControl::AddControlledConnection(class UFGRailroadTrackConnectionComponent* connection){ }
void AFGBuildableRailroadSwitchControl::RemoveControlledConnection(class UFGRailroadTrackConnectionComponent* connection, bool dismantleWhenCleared){ }
void AFGBuildableRailroadSwitchControl::ClearControlledConnections(bool dismantleWhenCleared){ }
void AFGBuildableRailroadSwitchControl::OnRep_VisualState(){ }
void AFGBuildableRailroadSwitchControl::UpdateVisuals(){ }
void AFGBuildableRailroadSwitchControl::ApplyVisualState(int16 state){ }
void AFGBuildableRailroadSwitchControl::UpdateSwitchData(){ }
void AFGBuildableRailroadSwitchControl::OnControlledConnectionChanged(class UFGRailroadTrackConnectionComponent* controlledConnection){ }
