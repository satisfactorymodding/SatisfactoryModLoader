// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildablePowerPole.h"
#include "Components/SceneComponent.h"
#include "FGColoredInstanceMeshProxy.h"
#include "Hologram/FGBuildableHologram.h"
#include "Net/UnrealNetwork.h"

AFGBuildablePowerPole::AFGBuildablePowerPole() : Super() {
	this->mConnectionsWidgetComponent = nullptr;
	this->mConnectionWidgetClass = nullptr;
	this->mMeshComponentProxy = CreateDefaultSubobject<UFGColoredInstanceMeshProxy>(TEXT("PoleMeshProxy"));
	this->mPowerPoleType = EPowerPoleType::PPT_POLE;
	this->mPowerTowerWireMaxLength = 100000.0;
	this->mHasPower = false;
	this->mHologramClass = AFGBuildableHologram::StaticClass();
	this->mInteractionRegisterPlayerWithCircuit = true;
	this->mMeshComponentProxy->SetupAttachment(RootComponent);
}
void AFGBuildablePowerPole::BeginPlay(){ Super::BeginPlay(); }
void AFGBuildablePowerPole::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildablePowerPole, mHasPower);
}
void AFGBuildablePowerPole::StartIsLookedAtForConnection( AFGCharacterPlayer* byCharacter,  UFGCircuitConnectionComponent* overlappingConnection){ }
void AFGBuildablePowerPole::StopIsLookedAtForConnection( AFGCharacterPlayer* byCharacter){ }
void AFGBuildablePowerPole::ShowConnectionFeedback( UFGCircuitConnectionComponent* overlappingConnection){ }
void AFGBuildablePowerPole::HideConnectionFeedback(){ }
void AFGBuildablePowerPole::Dismantle_Implementation(){ }
bool AFGBuildablePowerPole::ShouldBeConsideredForBase_Implementation(){ return bool(); }
void AFGBuildablePowerPole::OnBuildEffectFinished(){ }
UFGPowerCircuit* AFGBuildablePowerPole::GetPowerCircuit() const{ return nullptr; }
void AFGBuildablePowerPole::OnPowerConnectionChanged( UFGCircuitConnectionComponent* connection){ }
void AFGBuildablePowerPole::MarkConnectionsDirty(){ }
void AFGBuildablePowerPole::SetHasPower(bool hasPower){ }
void AFGBuildablePowerPole::OnConnectionHasPowerChanged(bool hasPower){ }
void AFGBuildablePowerPole::OnRep_HasPower() const{ }
