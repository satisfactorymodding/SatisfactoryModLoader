// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildableGeneratorFuel.h"
#include "Replication/FGReplicationDetailInventoryComponent.h"

AFGBuildableGeneratorFuel::AFGBuildableGeneratorFuel() : Super() {
	this->mFuelInventoryHandler = CreateDefaultSubobject<UFGReplicationDetailInventoryComponent>(TEXT("FuelInventoryHandler"));
	this->mFuelResourceForm = EResourceForm::RF_SOLID;
	this->mFuelLoadAmount = 1;
	this->mRequiresSupplementalResource = false;
	this->mSupplementalResourceClass = nullptr;
	this->mSupplementalLoadAmount = 0;
	this->mSupplementalToPowerRatio = 0.0;
	this->mIsFullBlast = false;
	this->mFuelInventory = nullptr;
	this->mCurrentFuelAmount = 0.0;
	this->mCurrentSupplementalAmount = 0.0;
	this->mHasFuelCached = false;
	this->mHasSupplementalCached = false;
	this->mCurrentFuelClass = nullptr;
	this->mCanChangePotential = true;
}
void AFGBuildableGeneratorFuel::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGBuildableGeneratorFuel::PreReplication(IRepChangedPropertyTracker& ChangedPropertyTracker){ }
void AFGBuildableGeneratorFuel::BeginPlay(){ }
void AFGBuildableGeneratorFuel::PostLoad(){ Super::PostLoad(); }
void AFGBuildableGeneratorFuel::Factory_Tick(float dt){ }
void AFGBuildableGeneratorFuel::OnReplicationDetailActorRemoved(){ }
void AFGBuildableGeneratorFuel::GetDismantleRefund_Implementation(TArray< FInventoryStack >& out_refund) const{ }
bool AFGBuildableGeneratorFuel::IsValidFuel(TSubclassOf<  UFGItemDescriptor > resource) const{ return bool(); }
bool AFGBuildableGeneratorFuel::IsValidSupplementalResource(TSubclassOf<  UFGItemDescriptor > resource) const{ return bool(); }
bool AFGBuildableGeneratorFuel::HasFuel() const{ return bool(); }
bool AFGBuildableGeneratorFuel::HasSuppleentalResource() const{ return bool(); }
float AFGBuildableGeneratorFuel::GetSupplementalConsumptionRateCurrent() const{ return float(); }
float AFGBuildableGeneratorFuel::GetSupplementalConsumptionRateMaximum() const{ return float(); }
float AFGBuildableGeneratorFuel::GetFuelAmount() const{ return float(); }
float AFGBuildableGeneratorFuel::GetSupplementalAmount() const{ return float(); }
void AFGBuildableGeneratorFuel::SetPendingPotential(float newPendingPotential){ }
void AFGBuildableGeneratorFuel::Factory_CollectFuel(float dt){ }
void AFGBuildableGeneratorFuel::Factory_CollectSupplimentalResource(float dt){ }
void AFGBuildableGeneratorFuel::LoadFuel(){ }
void AFGBuildableGeneratorFuel::LoadSupplemental(){ }
bool AFGBuildableGeneratorFuel::CanStartPowerProduction_Implementation() const{ return bool(); }
void AFGBuildableGeneratorFuel::Factory_StartPowerProduction_Implementation(){ }
void AFGBuildableGeneratorFuel::Factory_StopPowerProduction_Implementation(){ }
void AFGBuildableGeneratorFuel::Factory_TickPowerProduction_Implementation(float dt){ }
bool AFGBuildableGeneratorFuel::CanLoadFuel() const{ return bool(); }
bool AFGBuildableGeneratorFuel::CanLoadSupplenmental() const{ return bool(); }
void AFGBuildableGeneratorFuel::OnRep_ReplicationDetailActor(){ }
bool AFGBuildableGeneratorFuel::FilterFuelClasses(TSubclassOf< UObject > object, int32 idx) const{ return bool(); }
void AFGBuildableGeneratorFuel::OnRep_FuelInventory(){ }
AFGReplicationDetailActor_GeneratorFuel* AFGBuildableGeneratorFuel::GetCastRepDetailsActor() const{ return nullptr; }
