// This file has been automatically generated by the Unreal Header Implementation tool

#include "Buildables/FGBuildablePole.h"
#include "Components/SceneComponent.h"
#include "FGColoredInstanceMeshProxy.h"
#include "FGFactoryConnectionComponent.h"
#include "Hologram/FGPoleHologram.h"
#include "Net/UnrealNetwork.h"

AFGBuildablePole::AFGBuildablePole() : Super() {
	this->mHeight = 100.0;
	this->mSnapOnly0 = nullptr;
	this->mHologramClass = AFGPoleHologram::StaticClass();
	this->mCanContainLightweightInstances = true;
}
void AFGBuildablePole::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGBuildablePole, mHeight);
	DOREPLIFETIME(AFGBuildablePole, mSelectedPoleVersion);
}
void AFGBuildablePole::BeginPlay(){ Super::BeginPlay(); }
void AFGBuildablePole::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ Super::PostLoadGame_Implementation(saveVersion, gameVersion); }
void AFGBuildablePole::GetClearanceData_Implementation(TArray<FFGClearanceData>& out_data) const{ Super::GetClearanceData_Implementation(out_data); }
void AFGBuildablePole::SetPoleHeight(float height){ }
void AFGBuildablePole::SetupConnectionComponent(){ }
const FPoleVariation* AFGBuildablePole::GetBestPoleVariationForHeight(float inHeight) const{ return nullptr; }
int32 AFGBuildablePole::GetBestPoleVariationIndexForHeight(float inHeight) const{ return 0; }
void AFGBuildablePole_NoCustomization::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const{
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
}
TArray<struct FInstanceData> AFGBuildablePole::GetActorLightweightInstanceData_Implementation() const{ return TArray<struct FInstanceData>(); }
