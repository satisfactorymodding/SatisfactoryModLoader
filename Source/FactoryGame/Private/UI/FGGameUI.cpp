// This file has been automatically generated by the Unreal Header Implementation tool

#include "UI/FGGameUI.h"

UFGGameUI::UFGGameUI(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) {
	this->mPendingInterruptMessage = nullptr;
	this->mActiveAudioMessage = nullptr;
	this->mControllerDragWidget = nullptr;
}
void UFGGameUI::NativeConstruct(){ Super::NativeConstruct(); }
void UFGGameUI::ReleaseSlateResources(bool bReleaseChildren){ Super::ReleaseSlateResources(bReleaseChildren); }
void UFGGameUI::PopAllWidgets_Implementation(){ }
void UFGGameUI::NativeTick(const FGeometry& MyGeometry, float InDeltaTime){ Super::NativeTick(MyGeometry, InDeltaTime); }
UFGInteractWidget* UFGGameUI::GetInteractWidgetOfClass(TSubclassOf< UFGInteractWidget > interactWidgetClass) const{ return nullptr; }
void UFGGameUI::GetInteractWidgetsOfInteractObject(const UObject* InteractObject, TArray<UFGInteractWidget*>& OutInteractWidgets) const{ }
bool UFGGameUI::ContainsInteractWidgetOfClass(TSubclassOf< UFGInteractWidget > interactWidgetClass) const{ return bool(); }
void UFGGameUI::RemoveInteractWidget(UFGInteractWidget* widgetToRemove){ }
void UFGGameUI::AddInteractWidget_Implementation(UFGInteractWidget* widgetToAdd){ }
void UFGGameUI::AddPendingMessages(const TArray< UFGMessage* >& newMessages){ }
void UFGGameUI::HandlePendingMessages(float InDeltaTime){ }
void UFGGameUI::Native_HandlePauseGamePressed(){ }
void UFGGameUI::SetPauseMenuOpen(bool isOpen){ }
void UFGGameUI::AudioMessageFinishedPlayback(){ }
AFGCharacterPlayer* UFGGameUI::GetFGCharacter(){ return nullptr; }
void UFGGameUI::PlayAudioMessage(UFGMessage* message, TSubclassOf<UFGAudioMessage> messageClass){ }
void UFGGameUI::Internal_PlayAudioMessage( UFGAudioMessage* audioMessage){ }
UFGInteractWidget* UFGGameUI::FindWidgetByClass(TSubclassOf<UFGInteractWidget> widgetClass){ return nullptr; }
void UFGGameUI::ResumeGame(){ }
void UFGGameUI::Native_OnFactoryClipboardCopied(UObject* object,  UFGFactoryClipboardSettings* factoryClipboardSettings){ }
void UFGGameUI::Native_OnFactoryClipboardPasted(UObject* object,  UFGFactoryClipboardSettings* factoryClipboardSettings){ }
UUserWidget* UFGGameUI::RequestWidget(TSubclassOf< UUserWidget > widgetClass){ return nullptr; }
void UFGGameUI::ReleaseWidget(UUserWidget* widgetToRelease){ }
void UFGGameUI::SetControllerDragWidget( UFGControllerDragWidget* widget){ }
FReply UFGGameUI::NativeOnPreviewMouseButtonDown(const FGeometry& InGeometry, const FPointerEvent& InMouseEvent){ return FReply::Unhandled(); }
void UFGGameUI::Native_OnOnboardingStepUpdated(UFGOnboardingStep* currentOnboardingStep){ }
bool UFGGameUI::ShouldShowFicsitSplashWidget() const{ return bool(); }
bool UFGGameUI::ShouldSuppressMessage( UFGMessage* message) const{ return bool(); }
void UFGGameUI::SetupDelegates(){ }
