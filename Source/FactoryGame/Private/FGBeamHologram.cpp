// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGBeamHologram.h"

AFGBeamHologram::AFGBeamHologram() : Super() {
	this->mBuildModeDiagonal = nullptr;
	this->mBuildModeFreeForm = nullptr;
	this->mBeamMesh = nullptr;
	this->mCurrentLength = 0.0;
	this->mBuildStep = EBeamHologramBuildStep::BHBS_Placement;
}
void AFGBeamHologram::BeginPlay(){ }
void AFGBeamHologram::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
bool AFGBeamHologram::IsValidHitResult(const FHitResult& hitResult) const{ return bool(); }
bool AFGBeamHologram::TrySnapToActor(const FHitResult& hitResult){ return bool(); }
void AFGBeamHologram::SetHologramLocationAndRotation(const FHitResult& hitResult){ }
bool AFGBeamHologram::DoMultiStepPlacement(bool isInputFromARelease){ return bool(); }
int32 AFGBeamHologram::GetRotationStep() const{ return int32(); }
void AFGBeamHologram::GetSupportedBuildModes_Implementation(TArray< TSubclassOf<UFGHologramBuildModeDescriptor> >& out_buildmodes) const{ }
void AFGBeamHologram::ConfigureActor(AFGBuildable* inBuildable) const{ }
int32 AFGBeamHologram::GetBaseCostMultiplier() const{ return int32(); }
bool AFGBeamHologram::CanBeZooped() const{ return bool(); }
void AFGBeamHologram::SerializeConstructMessage(FArchive& ar, FNetConstructionID id){ }
void AFGBeamHologram::OnPendingConstructionHologramCreated_Implementation(AFGHologram* fromHologram){ }
void AFGBeamHologram::OnRep_CurrentLength(){ }
bool AFGBeamHologram::IsHologramIdenticalToBuildable( AFGBuildable* buildable, const FVector& hologramLocationOffset) const{ return bool(); }
void AFGBeamHologram::CreateVerticalBeam(const FHitResult& hitResult, bool allowDiagonal){ }
void AFGBeamHologram::CreateFreeformBeam(const FHitResult& hitResult){ }
void AFGBeamHologram::SetCurrentLength(float newLength){ }
