// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGBeacon.h"

AFGBeacon::AFGBeacon() : Super() {
	this->mActorRepresentationTexture = nullptr;
}
bool AFGBeacon::AddAsRepresentation(){ return bool(); }
bool AFGBeacon::UpdateRepresentation(){ return bool(); }
bool AFGBeacon::RemoveAsRepresentation(){ return bool(); }
bool AFGBeacon::IsActorStatic(){ return bool(); }
FVector AFGBeacon::GetRealActorLocation(){ return FVector(); }
FRotator AFGBeacon::GetRealActorRotation(){ return FRotator(); }
UTexture2D* AFGBeacon::GetActorRepresentationTexture(){ return nullptr; }
FText AFGBeacon::GetActorRepresentationText(){ return FText(); }
void AFGBeacon::SetActorRepresentationText(const FText& newText){ }
FLinearColor AFGBeacon::GetActorRepresentationColor(){ return FLinearColor(); }
void AFGBeacon::SetActorRepresentationColor(FLinearColor newColor){ }
ERepresentationType AFGBeacon::GetActorRepresentationType(){ return ERepresentationType(); }
bool AFGBeacon::GetActorShouldShowInCompass(){ return bool(); }
bool AFGBeacon::GetActorShouldShowOnMap(){ return bool(); }
EFogOfWarRevealType AFGBeacon::GetActorFogOfWarRevealType(){ return EFogOfWarRevealType(); }
float AFGBeacon::GetActorFogOfWarRevealRadius(){ return float(); }
ECompassViewDistance AFGBeacon::GetActorCompassViewDistance(){ return ECompassViewDistance(); }
void AFGBeacon::SetActorCompassViewDistance(ECompassViewDistance compassViewDistance){ }
void AFGBeacon::BeginPlay(){ }
