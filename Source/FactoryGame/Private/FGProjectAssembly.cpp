// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGProjectAssembly.h"
#include "Components/SceneComponent.h"
#include "Components/SkeletalMeshComponent.h"
#include "Net/UnrealNetwork.h"

AFGProjectAssembly::AFGProjectAssembly() : Super() {
	this->mMainSkeletalMeshComponent = CreateDefaultSubobject<USkeletalMeshComponent>(TEXT("MainMesh"));
	this->mSpaceElevator = nullptr;
	this->mMovementSpeed = 6000.0;
	this->mProjectAssemblyHeight = 2350000.0;
	this->mIsMovingToTarget = false;
	this->mTargetLocation = FVector::ZeroVector;
	this->PrimaryActorTick.TickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.bTickEvenWhenPaused = false;
	this->PrimaryActorTick.bCanEverTick = true;
	this->PrimaryActorTick.bStartWithTickEnabled = false;
	this->PrimaryActorTick.bAllowTickOnDedicatedServer = true;
	this->PrimaryActorTick.TickInterval = 0.0;
	this->bAlwaysRelevant = true;
	this->bReplicates = true;
	this->NetDormancy = ENetDormancy::DORM_DormantAll;
	this->RootComponent = CreateDefaultSubobject<USceneComponent>(TEXT("Root"));
	this->mMainSkeletalMeshComponent->SetupAttachment(RootComponent);
}
void AFGProjectAssembly::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGProjectAssembly, mIsMovingToTarget);
	DOREPLIFETIME(AFGProjectAssembly, mTargetLocation);
}
void AFGProjectAssembly::BeginPlay(){ Super::BeginPlay(); }
void AFGProjectAssembly::EndPlay(const EEndPlayReason::Type endPlayReason){ Super::EndPlay(endPlayReason); }
void AFGProjectAssembly::OnGamePhaseChanged_Implementation(UFGGamePhase* currentGamePhase){ }
void AFGProjectAssembly::BeginMoveToTarget_Implementation(){ }
void AFGProjectAssembly::OnTargetReached_Implementation(){ }
void AFGProjectAssembly::Tick(float DeltaSeconds){ Super::Tick(DeltaSeconds); }
void AFGProjectAssembly::UpdatePosition_Implementation(){ }
void AFGProjectAssembly::OnRep_IsMovingToTarget(){ }
