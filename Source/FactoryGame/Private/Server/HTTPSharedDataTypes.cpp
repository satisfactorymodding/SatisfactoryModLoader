// This file has been automatically generated by the Unreal Header Implementation tool

#include "Server/HTTPSharedDataTypes.h"

FFGRequestPayload::FFGRequestPayload(const FString& InContentType, TArray<uint8>&& InPayload, const TMap<FString, FString>& ContentAttributes){ }
FFGRequestPayload::FFGRequestPayload(const FString& InContentType, const FString& InPayload){ }
FString FFGRequestPayload::GetContentCharset() const{ return FString(); }
FString FFGRequestPayload::GetContentTypeWithAttributes() const{ return FString(); }
FString FFGRequestPayload::GetContentDisposition() const{ return FString(); }
FString FFGRequestPayload::GetPayloadAsString() const{ return FString(); }
void FFGRequestPayload::SetAttachmentFilename(const FString& InAttachmentFilename){ }
void FFGRequestPayload::SetContentCharset(const FString& InCharset){ }
void FFGRequestPayload::SetContentAttribute(const FString& InAttributeName, const FString& InAttributeValue){ }
FString FFGRequestPayload::GetContentAttribute(const FString& InAttributeName) const{ return FString(); }
FFGRequestBodyPart::FFGRequestBodyPart(const FString& InContentType, TArray<uint8>&& InPayload, const TMap<FString, FString>& ContentAttributes):FFGRequestPayload(InContentType, TArray<uint8>(), ContentAttributes){ }
FFGRequestBodyPart::FFGRequestBodyPart(const FString& InContentType, const FString& InPayload): FFGRequestPayload(InContentType,InPayload){ }
TArray<FString> FFGRequestBodyPart::GetBodyPartHeader(const FString& HeaderName) const{ return TArray<FString>(); }
void FFGRequestBodyPart::SetFormFieldName(const FString& InFormFieldName){ }
void FFGRequestBodyPart::SetBodyHeader(const FString& InHeaderName, const FString& InHeaderValue){ }
void FFGRequestBodyPart::AppendBodyHeaders(const TMap<FString, TArray<FString>>& InBodyHeaders){ }
FString FFGRequestBodyPart::GetContentDisposition() const{ return FString(); }
FFGRequestBodyPart* FFGMultipartDataWrapper::operator->() const{ return nullptr; }
FFGRequestBodyPart& FFGMultipartDataWrapper::operator*() const{ return *MultipartData; }
FFGMultipartDataWrapper::operator FFGRequestBodyPart*() const { return nullptr; }
