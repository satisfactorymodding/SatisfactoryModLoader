// This file has been automatically generated by the Unreal Header Implementation tool

#include "Creature/FGCreature.h"
#include "Components/SceneComponent.h"
#include "Components/CapsuleComponent.h"

AFGCreature::AFGCreature(const FObjectInitializer& ObjectInitializer) : Super(ObjectInitializer) {
	this->mSpline = nullptr;
	this->mShouldOptimizeMeshWhenVisible = true;
	this->mNavigationGenerationRadius = 7000.0;
	this->mNavigationRemovalRadius = 8000.0;
	this->mIsArachnid = false;
	this->mIsEnabled = EEnabled::E_Unknown;
	this->mItemToDrop = nullptr;
	this->mIsPersistent = false;
	this->mActualAIControllerClass = nullptr;
	this->mTargetRotation.Pitch = 0.0;
	this->mTargetRotation.Yaw = 0.0;
	this->mTargetRotation.Roll = 0.0;
	this->mCanSpawnDuringDay = true;
	this->mCanSpawnDuringNight = true;
	this->mMoveDuringRotation = false;
	this->mRotationSpeedMultiplier = 0.3;
	this->mEyeLocationComponent = CreateDefaultSubobject<USceneComponent>(TEXT("EyeLocationComponent"));
	this->mArachnophobia_Sprite = nullptr;
	this->mArachnophobia_Material = nullptr;
	this->mArachnophobia_Particle = nullptr;
	this->mDayTimePctCountAsNight = 0.0;
	this->mOwningSpawner = nullptr;
	this->mSpawnWeight = 1.0;
	this->mNeedsSpawner = true;
	this->mSpawnDistance = -1.0;
	this->bUseControllerRotationYaw = false;
	this->mEyeLocationComponent->SetupAttachment(GetCapsuleComponent());
}
void AFGCreature::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGCreature::BeginPlay(){ }
void AFGCreature::PreInitializeComponents(){ Super::PreInitializeComponents(); }
void AFGCreature::Tick(float deltaTime){ }
bool AFGCreature::ShouldSave_Implementation() const{ return bool(); }
void AFGCreature::Died(AActor* died){ }
FVector AFGCreature::GetPawnViewLocation() const{ return FVector(); }
void AFGCreature::StartRotationMovement_Implementation(FRotator targetRotation){ }
void AFGCreature::CancelRotationMovement_Implementation(){ }
void AFGCreature::ConfigureArachnophobiaMode_Implementation(bool isArachnophobiaMode){ }
void AFGCreature::OnArachnophobiaModeChanged(bool isArachnophobiaMode){ }
void AFGCreature::CheckRotationMovement(){ }
void AFGCreature::Multicast_ConsumeItem_Implementation(TSubclassOf<  UFGItemDescriptor > itemDescriptor, int32 amount){ }
void AFGCreature::SetMoveSpeed(EMoveSpeed newMoveSpeedType){ }
void AFGCreature::AiCalculateLeadTrajectory(const FVector& targetPos, const FVector& targetVelocity, const FVector& fromPos, float interceptorSpeed, bool &isPosibleToLead , FVector& interceptPoint, float leadScaling){ }
void AFGCreature::SpawnDeathItem_Implementation(){ }
void AFGCreature::ClearKillOrphanTimer(){ }
void AFGCreature::OnRep_IsEnabled(){ }
void AFGCreature::SetEnabled(EEnabled enabled){ }
void AFGCreature::KillOrphanCreature(){ }
void AFGCreature::OnRep_TargetRotation(){ }
