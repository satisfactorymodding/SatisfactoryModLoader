// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGSignSubsystem.h"

void UFGSignDataRemoteCallObject::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void UFGSignDataRemoteCallObject::Server_RequestSignData_Implementation(FSignRPC_Data signRPCData){ }
void UFGSignDataRemoteCallObject::Client_RequestSignDataResponse_Implementation(FSignRPC_Data signRPCData){ }
void UFGSignDataRemoteCallObject::Server_SetSignData_Implementation(FClientSetSignData clientData){ }
void AFGSignSubsystem::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
AFGSignSubsystem* AFGSignSubsystem::Get(UWorld* world){ return nullptr; }
AFGSignSubsystem* AFGSignSubsystem::GetSignSubsystem(UObject* worldContext){ return nullptr; }
AFGSignSubsystem::AFGSignSubsystem() : Super() {
	this->mSignPixelInstanceActor = nullptr;
	this->PrimaryActorTick.TickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.bTickEvenWhenPaused = false;
	this->PrimaryActorTick.bCanEverTick = true;
	this->PrimaryActorTick.bStartWithTickEnabled = true;
	this->PrimaryActorTick.bAllowTickOnDedicatedServer = true;
	this->PrimaryActorTick.TickInterval = 0.5;
}
void AFGSignSubsystem::BeginPlay(){ }
void AFGSignSubsystem::Tick(float DeltaSeconds){ }
void AFGSignSubsystem::UpdateAndSortPendingSigns(){ }
void AFGSignSubsystem::AddWidgetSign(AFGBuildableWidgetSign* widgetSign){ }
void AFGSignSubsystem::RemoveWidgetSign(AFGBuildableWidgetSign* widgetSign){ }
void AFGSignSubsystem::NotifySignDataDirty(AFGBuildableWidgetSign* widgetSign){ }
void AFGSignSubsystem::AddPixelSign(AFGBuildablePixelSign* pixelSign){ }
void AFGSignSubsystem::RemovePixelSign(AFGBuildablePixelSign* pixelSign){ }
