// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGBuildablePipelineSupport.h"
#include "FGColoredInstanceMeshProxy.h"
#include "Components/SceneComponent.h"

#if WITH_EDITOR
void AFGBuildablePipelineSupport::OnConstruction(const FTransform& transform){ }
#endif 
AFGBuildablePipelineSupport::AFGBuildablePipelineSupport() : Super() {
	this->mLength = 200.0;
	this->mVerticalAngle = 0.0;
	this->mSupportComponentDefaultMesh = CreateDefaultSubobject<UFGColoredInstanceMeshProxy>(TEXT("SupportMeshCompProxyHolder"));
	this->mSnapOnly0 = nullptr;
	this->mSupportLengthComponent = nullptr;
	this->mSupportMesh = nullptr;
	this->mUseStaticHeight = false;
	this->mHologramClass = AFGBuildablePipelineSupport::StaticClass();
	this->mCreateClearanceMeshRepresentation = false;
	this->mSupportComponentDefaultMesh->SetupAttachment(RootComponent);
}
void AFGBuildablePipelineSupport::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
void AFGBuildablePipelineSupport::BeginPlay(){ }
void AFGBuildablePipelineSupport::SetSupportLength(float length){ }
void AFGBuildablePipelineSupport::SetVerticalAngle(float angle){ }
void AFGBuildablePipelineSupport::SetupConnectionComponent(){ }
TSubclassOf<UFGPipeConnectionComponentBase> AFGBuildablePipelineSupport::GetConnectionType_Implementation(){ return TSubclassOf<UFGPipeConnectionComponentBase>(); }
const FName AFGBuildablePipelineSupport::SupportMeshName = FName();
