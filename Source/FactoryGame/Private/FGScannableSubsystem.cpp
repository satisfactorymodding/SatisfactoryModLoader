// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGScannableSubsystem.h"
#include "Net/UnrealNetwork.h"

DEFINE_LOG_CATEGORY(LogScannableSubsystem);

AFGScannableSubsystem* AFGScannableSubsystem::Get(UWorld* world){ return nullptr; }
AFGScannableSubsystem* AFGScannableSubsystem::Get(UObject* worldContext){ return nullptr; }
void AFGScannableSubsystem::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
}
void AFGScannableSubsystem::BeginPlay(){ Super::BeginPlay(); }
void AFGScannableSubsystem::EndPlay(const EEndPlayReason::Type EndPlayReason){ Super::EndPlay(EndPlayReason); }
void AFGScannableSubsystem::RegisterRadarTower( AFGBuildableRadarTower* radarTower){ }
void AFGScannableSubsystem::UnRegisterRadarTower( AFGBuildableRadarTower* radarTower){ }
void AFGScannableSubsystem::OnLevelPlacedActorDestroyed(AActor* destroyedActor){ }
void AFGScannableSubsystem::OnDropPodLooted( AFGDropPod* dropPod){ }
void AFGScannableSubsystem::OnCreatureSpawnerUpdated( AFGCreatureSpawner* creatureSpawner, bool scannable){ }
void AFGScannableSubsystem::OnCreatureSpawnerAdded( AFGCreatureSpawner* creatureSpawner){ }
void AFGScannableSubsystem::OnCreatureSpawnerRemoved( AFGCreatureSpawner* creatureSpawner){ }
bool AFGScannableSubsystem::DoesPickupExist(const FGuid& PickupGuid) const{ return bool(); }
bool AFGScannableSubsystem::HasDropPodBeenLooted(const FGuid& dropPodGuid) const { return bool(); }
void AFGScannableSubsystem::AssignScannableData(const TArray<FWorldScannableData>& itemPickups,	const TArray<FWorldScannableData>& dropPods){ }
