// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGDropPod.h"
#include "FGPowerInfoComponent.h"

AFGDropPod::AFGDropPod() : Super() {
	this->mAmountOfInventorySlots = 1;
	this->mPowerInfo = CreateDefaultSubobject<UFGPowerInfoComponent>(TEXT("PowerInfoComponent"));
	this->mHasPower = false;
	this->mHasBeenOpened = false;
	this->mInventory = nullptr;
	this->PrimaryActorTick.TickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.bTickEvenWhenPaused = false;
	this->PrimaryActorTick.bCanEverTick = false;
	this->PrimaryActorTick.bStartWithTickEnabled = false;
	this->PrimaryActorTick.bAllowTickOnDedicatedServer = true;
	this->PrimaryActorTick.TickInterval = 0.0;
	this->bReplicates = true;
}
void AFGDropPod::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const{ }
void AFGDropPod::BeginPlay(){ }
void AFGDropPod::EndPlay(const EEndPlayReason::Type endPlayReason){ }
void AFGDropPod::GainedSignificance_Implementation(){ }
void AFGDropPod::LostSignificance_Implementation(){ }
void AFGDropPod::PreSaveGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGDropPod::PostSaveGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGDropPod::PreLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGDropPod::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGDropPod::GatherDependencies_Implementation(TArray< UObject* >& out_dependentObjects){ }
bool AFGDropPod::NeedTransform_Implementation(){ return bool(); }
bool AFGDropPod::ShouldSave_Implementation() const{ return bool(); }
void AFGDropPod::UpdateUseState_Implementation( AFGCharacterPlayer* byCharacter, const FVector& atLocation,  UPrimitiveComponent* componentHit, FUseState& out_useState) const{ }
void AFGDropPod::OnUse_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGDropPod::OnUseStop_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
bool AFGDropPod::IsUseable_Implementation() const{ return bool(); }
void AFGDropPod::StartIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
FText AFGDropPod::GetLookAtDecription_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state) const{ return FText(); }
void AFGDropPod::StopIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGDropPod::Open(){ }
void AFGDropPod::OnOpened_Implementation(){ }
void AFGDropPod::RollLoot_Implementation(){ }
void AFGDropPod::OnRepair_Implementation( AFGCharacterPlayer* InteractingCharacter){ }
FDropPackage AFGDropPod::RollDropPackage(TArray<TSubclassOf<class UFGItemDescriptor>> includedItems){ return FDropPackage(); }
void AFGDropPod::GenerateDropPodInventory(TArray<TSubclassOf<class UFGItemDescriptor>> includedItems, int32 numItemsCreated){ }
void AFGDropPod::OnHasPowerChanged( UFGPowerInfoComponent* info){ }
void AFGDropPod::OnRep_HasBeenOpened(){ }
