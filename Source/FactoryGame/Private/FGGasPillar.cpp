// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGGasPillar.h"
#include "FGDotComponent.h"
#include "Components/StaticMeshComponent.h"
#include "Components/SphereComponent.h"

AFGGasPillar::AFGGasPillar() : Super() {
	this->mMesh = CreateDefaultSubobject<UStaticMeshComponent>(TEXT("Mesh"));
	this->mOverlapCollision = CreateDefaultSubobject<USphereComponent>(TEXT("OverlapBox"));
	this->mOverlapCollision->SetupAttachment(mMesh);
	this->mDotComponent = CreateDefaultSubobject<UFGDotComponent>(TEXT("DotComponent"));
	this->mDotComponent->SetupAttachment(mOverlapCollision);
	this->mPostProcessSettings = nullptr;
	this->mSignificanceRange = 15000.0;
	this->RootComponent = mMesh;
}
void AFGGasPillar::BeginPlay(){ }
void AFGGasPillar::EndPlay(const EEndPlayReason::Type endPlayReason){ }
void AFGGasPillar::PostUnregisterAllComponents(void){ }
void AFGGasPillar::PostRegisterAllComponents(){ }
void AFGGasPillar::GainedSignificance_Implementation(){ }
void AFGGasPillar::LostSignificance_Implementation(){ }
void AFGGasPillar::GainedSignificance_Native(){ }
void AFGGasPillar::LostSignificance_Native(){ }
float AFGGasPillar::GetSignificanceRange(){ return float(); }
bool AFGGasPillar::EncompassesPoint(FVector point, float sphereRadius , float* out_distanceToPoint){ return bool(); }
FPostProcessVolumeProperties AFGGasPillar::GetProperties() const{ return FPostProcessVolumeProperties(); }
