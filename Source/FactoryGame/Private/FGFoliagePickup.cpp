// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGFoliagePickup.h"

AFGFoliagePickup::AFGFoliagePickup() : Super() {
	this->mPickupMesh = nullptr;
	this->bOnlyRelevantToOwner = true;
	this->SetHidden(true);
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
void AFGFoliagePickup::UpdateUseState_Implementation( AFGCharacterPlayer* byCharacter, const FVector& atLocation,  UPrimitiveComponent* componentHit, FUseState& out_useState) const{ }
void AFGFoliagePickup::OnUse_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGFoliagePickup::OnUseStop_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
bool AFGFoliagePickup::IsUseable_Implementation() const{ return bool(); }
void AFGFoliagePickup::StartIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
FText AFGFoliagePickup::GetLookAtDecription_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state) const{ return FText(); }
void AFGFoliagePickup::StopIsLookedAt_Implementation( AFGCharacterPlayer* byCharacter, const FUseState& state){ }
void AFGFoliagePickup::BroadcastPickup_Implementation( UStaticMesh* fromStaticMesh, FVector atLocation){ }
void AFGFoliagePickup::SetPickupData( UHierarchicalInstancedStaticMeshComponent* component, int32 instanceIndex, AFGCharacterPlayer* byCharacter){ }
void AFGFoliagePickup::Server_PickupWithTransform_Implementation( AFGCharacterPlayer* byCharacter, AFGFoliageRemoval* foliageRemoval, FTransform withTransform){ }
bool AFGFoliagePickup::Server_PickupWithTransform_Validate( AFGCharacterPlayer* byCharacter, AFGFoliageRemoval* foliageRemoval, FTransform withTransform){ return bool(); }
bool AFGFoliagePickup::AddToPlayerInventory( AFGCharacterPlayer* character,  UHierarchicalInstancedStaticMeshComponent* meshComponent){ return bool(); }
bool AFGFoliagePickup::HasPlayerSpaceFor( AFGCharacterPlayer* character,  UHierarchicalInstancedStaticMeshComponent* meshComponent){ return bool(); }
