// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGItemPickupMarker.h"
#include "Net/UnrealNetwork.h"

AFGItemPickupMarker::AFGItemPickupMarker() : Super() {
	this->mItemDescriptor = nullptr;
	this->mCompassMaterialInstance = nullptr;
}
void AFGItemPickupMarker::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGItemPickupMarker, mItemDescriptor);
}
void AFGItemPickupMarker::BeginPlay(){ Super::BeginPlay(); }
void AFGItemPickupMarker::EndPlay(const EEndPlayReason::Type endPlayReason){ Super::EndPlay(endPlayReason); }
void AFGItemPickupMarker::PreSaveGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGItemPickupMarker::PostSaveGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGItemPickupMarker::PreLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGItemPickupMarker::PostLoadGame_Implementation(int32 saveVersion, int32 gameVersion){ }
void AFGItemPickupMarker::GatherDependencies_Implementation(TArray< UObject* >& out_dependentObjects){ }
bool AFGItemPickupMarker::NeedTransform_Implementation(){ return bool(); }
bool AFGItemPickupMarker::ShouldSave_Implementation() const{ return bool(); }
bool AFGItemPickupMarker::AddAsRepresentation(){ return bool(); }
bool AFGItemPickupMarker::UpdateRepresentation(){ return bool(); }
bool AFGItemPickupMarker::RemoveAsRepresentation(){ return bool(); }
bool AFGItemPickupMarker::IsActorStatic(){ return bool(); }
FVector AFGItemPickupMarker::GetRealActorLocation(){ return FVector(); }
FRotator AFGItemPickupMarker::GetRealActorRotation(){ return FRotator(); }
UTexture2D* AFGItemPickupMarker::GetActorRepresentationTexture(){ return nullptr; }
FText AFGItemPickupMarker::GetActorRepresentationText(){ return FText(); }
void AFGItemPickupMarker::SetActorRepresentationText(const FText& newText){ }
FLinearColor AFGItemPickupMarker::GetActorRepresentationColor(){ return FLinearColor(); }
void AFGItemPickupMarker::SetActorRepresentationColor(FLinearColor newColor){ }
ERepresentationType AFGItemPickupMarker::GetActorRepresentationType(){ return ERepresentationType(); }
bool AFGItemPickupMarker::GetActorShouldShowInCompass(){ return bool(); }
bool AFGItemPickupMarker::GetActorShouldShowOnMap(){ return bool(); }
EFogOfWarRevealType AFGItemPickupMarker::GetActorFogOfWarRevealType(){ return EFogOfWarRevealType(); }
float AFGItemPickupMarker::GetActorFogOfWarRevealRadius(){ return float(); }
ECompassViewDistance AFGItemPickupMarker::GetActorCompassViewDistance(){ return ECompassViewDistance(); }
void AFGItemPickupMarker::SetActorCompassViewDistance(ECompassViewDistance compassViewDistance){ }
UMaterialInterface* AFGItemPickupMarker::GetActorRepresentationCompassMaterial(){ return nullptr; }
void AFGItemPickupMarker::SetItemDescriptor(TSubclassOf<UFGItemDescriptor> newItemDescriptor){ }
