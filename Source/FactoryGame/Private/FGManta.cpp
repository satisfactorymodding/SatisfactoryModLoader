// This file has been automatically generated by the Unreal Header Implementation tool

#include "FGManta.h"
#include "Components/SceneComponent.h"
#include "Net/UnrealNetwork.h"

AFGManta::AFGManta() : Super() {
	this->mCachedSpline = nullptr;
	this->mSplinePath = nullptr;
	this->mCachedMesh = nullptr;
	this->mCurrentTime = 0.0;
	this->mOffsetMagnitude = 0.0;
	this->mSecondsPerLoop = 900.0;
	this->mSignificanceRange = 130000.0;
	this->mTickTransform = true;
	this->mIsClosedSplineLoop = true;
	this->PrimaryActorTick.TickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.bTickEvenWhenPaused = false;
	this->PrimaryActorTick.bCanEverTick = true;
	this->PrimaryActorTick.bStartWithTickEnabled = true;
	this->PrimaryActorTick.bAllowTickOnDedicatedServer = true;
	this->PrimaryActorTick.TickInterval = 0.0;
	this->bReplicates = true;
	this->RootComponent = CreateDefaultSubobject<USceneComponent>(TEXT("RootComponent"));
}
void AFGManta::GainedSignificance_Implementation(){ }
void AFGManta::LostSignificance_Implementation(){ }
void AFGManta::GainedSignificance_Native(){ }
void AFGManta::LostSignificance_Native(){ }
float AFGManta::GetSignificanceRange(){ return float(); }
void AFGManta::GetLifetimeReplicatedProps(TArray<FLifetimeProperty>& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGManta, mCurrentTime);
}
void AFGManta::BeginPlay(){ Super::BeginPlay(); }
void AFGManta::EndPlay(const EEndPlayReason::Type endPlayReason){ Super::EndPlay(endPlayReason); }
void AFGManta::UpdateManta(){ }
void AFGManta::Tick(float DeltaTime){ Super::Tick(DeltaTime); }
