// This file has been automatically generated by the Unreal Header Implementation tool

#include "Equipment/FGPortableMinerDispenser.h"
#include "Components/SceneComponent.h"
#include "Components/SkeletalMeshComponent.h"

AFGPortableMinerDispenser::AFGPortableMinerDispenser() : Super() {
	this->mHologramMeshComponent = CreateDefaultSubobject<USkeletalMeshComponent>(TEXT("HologramMesh"));
	this->mPortableMinerClass = nullptr;
	this->mArmAnimation = EArmEquipment::AE_PortableMiner;
	this->mDefaultEquipmentActions = 1;
	this->RootComponent = CreateDefaultSubobject<USceneComponent>(TEXT("RootComponent"));
	this->mHologramMeshComponent->SetupAttachment(RootComponent);
}
void AFGPortableMinerDispenser::Tick(float DeltaSeconds){ Super::Tick(DeltaSeconds); }
void AFGPortableMinerDispenser::UnEquip(){ }
void AFGPortableMinerDispenser::HandleDefaultEquipmentActionEvent(EDefaultEquipmentAction action, EDefaultEquipmentActionEvent actionEvent){ }
bool AFGPortableMinerDispenser::TraceForPortableMinerPlacementLocation(FVector& out_Location) const{ return bool(); }
bool AFGPortableMinerDispenser::IsResourceNodeValid(const AFGResourceNode* resourceNode) const{ return bool(); }
void AFGPortableMinerDispenser::Server_SpawnPortableMiner_Implementation(const FVector& location, AFGResourceNode* resourceNode){ }
void AFGPortableMinerDispenser::UpdateHologramLocation(const FVector& location, bool isValidPlacement, bool isVisible){ }
void AFGPortableMinerDispenser::Server_UpdateHologramLocation_Implementation(const FVector& location, bool isValidPlacement, bool isVisible){ }
void AFGPortableMinerDispenser::Multicast_UpdateHologramLocation_Implementation(const FVector& location, bool isValidPlacement, bool isVisible){ }
void AFGPortableMinerDispenser::Local_UpdateHologramLocation(const FVector& location, bool isValidPlacement, bool isVisible) const{ }
