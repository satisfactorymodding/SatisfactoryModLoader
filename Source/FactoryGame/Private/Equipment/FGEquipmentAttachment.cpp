// This file has been automatically generated by the Unreal Header Implementation tool

#include "Equipment/FGEquipmentAttachment.h"
#include "Equipment/FGEquipment.h"

void AFGEquipmentAttachment::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const{ }
AFGEquipmentAttachment::AFGEquipmentAttachment() : Super() {
	this->mEquipmentClass = nullptr;
	this->mUseLocation.X = 0.0;
	this->mUseLocation.Y = 0.0;
	this->mUseLocation.Z = 0.0;
	this->mAttachSocket = TEXT("None");
	this->mArmAnimation = EArmEquipment::AE_None;
	this->mBackAnimation = EBackEquipment::BE_None;
	this->mAttachedTo = nullptr;
	this->mEquipmentSlot = EEquipmentSlot::ES_NONE;
	this->mAnimationState = 0;
	this->PrimaryActorTick.TickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.EndTickGroup = ETickingGroup::TG_PrePhysics;
	this->PrimaryActorTick.bTickEvenWhenPaused = false;
	this->PrimaryActorTick.bCanEverTick = true;
	this->PrimaryActorTick.bStartWithTickEnabled = false;
	this->PrimaryActorTick.bAllowTickOnDedicatedServer = true;
	this->PrimaryActorTick.TickInterval = 0.0;
	this->bNetUseOwnerRelevancy = true;
	this->bReplicates = true;
}
void AFGEquipmentAttachment::BeginPlay(){ }
void AFGEquipmentAttachment::Attach( AFGCharacterPlayer* character){ }
void AFGEquipmentAttachment::OnAttach_Implementation(){ }
void AFGEquipmentAttachment::Detach(){ }
void AFGEquipmentAttachment::OnDetach_Implementation(){ }
void AFGEquipmentAttachment::SetAttachmentUseState(int newUseState){ }
void AFGEquipmentAttachment::SetUseLocation(const FVector& newUseLocation){ }
void AFGEquipmentAttachment::PlayUseEffect_Implementation(FVector useLocation){ }
void AFGEquipmentAttachment::OnRep_UseLocationUpdated(){ }
void AFGEquipmentAttachment::OnRep_OnAnimationStateUpdated(){ }
void AFGEquipmentAttachment::SetAttachmentTicks(bool inTick){ }
