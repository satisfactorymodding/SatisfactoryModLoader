// This file has been automatically generated by the Unreal Header Implementation tool

#include "Equipment/BoomBox/FGEquipmentBoomBox.h"
#include "Net/UnrealNetwork.h"

AFGEquipmentBoomBox::AFGEquipmentBoomBox() : Super() {
	this->mBoomBoxPlayer = nullptr;
}
void AFGEquipmentBoomBox::SetBoomBoxPlayer( AFGBoomBoxPlayer* player){ }
void AFGEquipmentBoomBox::WasEquipped_Implementation(){ }
void AFGEquipmentBoomBox::WasUnEquipped_Implementation(){ }
void AFGEquipmentBoomBox::WasRemovedFromSlot_Implementation(){ }
void AFGEquipmentBoomBox::WasSlottedIn_Implementation( AFGCharacterPlayer* holder){ }
void AFGEquipmentBoomBox::BeginPlay(){ Super::BeginPlay(); }
void AFGEquipmentBoomBox::EndPlay(const EEndPlayReason::Type endPlayReason){ Super::EndPlay(endPlayReason); }
void AFGEquipmentBoomBox::GetLifetimeReplicatedProps(TArray< FLifetimeProperty >& OutLifetimeProps) const {
	Super::GetLifetimeReplicatedProps(OutLifetimeProps);
	DOREPLIFETIME(AFGEquipmentBoomBox, mBoomBoxPlayer);
}
FFGDynamicStruct AFGEquipmentBoomBox::SaveToItemState_Implementation() const{ return FFGDynamicStruct(); }
void AFGEquipmentBoomBox::LoadFromItemState_Implementation(const FFGDynamicStruct& itemState){ }
void AFGEquipmentBoomBox::OnRep_BoomBoxPlayer( AFGBoomBoxPlayer* oldPlayer){ }
void AFGEquipmentBoomBox::AddEquipmentActionBindings(){ }
void AFGEquipmentBoomBox::Input_PlayPause(const FInputActionValue& actionValue){ }
void AFGEquipmentBoomBox::Input_Turbobass(const FInputActionValue& actionValue){ }
void AFGEquipmentBoomBox::Input_ToggleMenu(const FInputActionValue& actionValue){ }
void AFGEquipmentBoomBox::Input_PutDown(const FInputActionValue& actionValue){ }
void AFGEquipmentBoomBox::ReleaseBoomBoxPlayer(){ }
void AFGEquipmentBoomBox::TransferMontagesToNewBoomBoxPlayer(AFGBoomBoxPlayer* oldPlayer, AFGBoomBoxPlayer* newPlayer){ }
